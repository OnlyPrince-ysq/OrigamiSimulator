%% Generate geometry of Yoshiura sheet
% This code is used to generate the geometry of miura sheet if needed
% both n and m should be even number

function[Node,Panel] =GenerateTMPSheet(a,b,m,n,Ext)

delta=b*sqrt((1-Ext^2));
theta=atan(2*delta/a);

zstep=a*sin(2*theta);
ystep=a*cos(2*theta);


nodeNum=m/2*(2*n+1)+1+n;
Node=zeros(nodeNum,3);
Panel{1}=zeros(1);

for i=1:(m/2)  
    
    for j=1:n/3
        Node((i-1)*(2*n+1)+3*(j-1)+1,:)=...
            [b*Ext*(2*(i-1)), ...
             0+(a+2*ystep)*(j-1), zstep+delta];
        Node((i-1)*(2*n+1)+3*(j-1)+2,:)=...
            [b*Ext*(2*(i-1)), ...
             ystep+(a+2*ystep)*(j-1), delta];
        Node((i-1)*(2*n+1)+3*(j-1)+3,:)=...
            [b*Ext*(2*(i-1)), ...
             a+ystep+(a+2*ystep)*(j-1), delta];
    end  
    Node((i-1)*(2*n+1)+3*(n/3-1)+4,:)=...
            [b*Ext*(2*(i-1)), ...
             a+ystep*2+(a+2*ystep)*(n/3-1), delta+zstep];
         
    for j=1:n/3
        Node((i-1)*(2*n+1)+n+1+3*(j-1)+1,:)=...
            [b*Ext*(2*(i-1))+b*Ext, ...
             a/2+(a+2*ystep)*(j-1), zstep];
        Node((i-1)*(2*n+1)+n+1+3*(j-1)+2,:)=...
            [b*Ext*(2*(i-1))+b*Ext, ...
             a/2+ystep+(a+2*ystep)*(j-1), 0];
        Node((i-1)*(2*n+1)+n+1+3*(j-1)+3,:)=...
            [b*Ext*(2*(i-1))+b*Ext, ...
             a/2+2*ystep+(a+2*ystep)*(j-1), zstep];
    end        

end


for j=1:n/3
    Node((m/2)*(2*n+1)+3*(j-1)+1,:)=...
        [b*Ext*(2*(m/2)), ...
         0+(a+2*ystep)*(j-1), zstep+delta];
    Node((m/2)*(2*n+1)+3*(j-1)+2,:)=...
        [b*Ext*(2*(m/2)), ...
         ystep+(a+2*ystep)*(j-1), delta];
    Node((m/2)*(2*n+1)+3*(j-1)+3,:)=...
        [b*Ext*(2*(m/2)), ...
         a+ystep+(a+2*ystep)*(j-1), delta];
end  
Node((m/2)*(2*n+1)+3*(n/3-1)+4,:)=...
        [b*Ext*(2*(m/2)), ...
         a+ystep*2+(a+2*ystep)*(n/3-1), delta+zstep];
     
     
for i=1:(m/2)
        for j =1:((fix(n-1)/3))
          Panel{2*(4*(fix((n-1)/3))+3)*(i-1)+4*(j-1)+1} = [...
              (i-1)*(2*n+1)+3*(j-1)+1 ...
              (i-1)*(2*n+1)+n+1+3*(j-1)+1 ...
              (i-1)*(2*n+1)+n+1+3*(j-1)+2 ...
              (i-1)*(2*n+1)+3*(j-1)+2 ...
              ];

          Panel{2*(4*(fix((n-1)/3))+3)*(i-1)+4*(j-1)+2} = [...
              (i-1)*(2*n+1)+3*(j-1)+2 ...
              (i-1)*(2*n+1)+n+1+3*(j-1)+2 ...
              (i-1)*(2*n+1)+3*(j-1)+3 ...
              ];

          Panel{2*(4*(fix((n-1)/3))+3)*(i-1)+4*(j-1)+3} = [...
              (i-1)*(2*n+1)+3*(j-1)+3 ...
              (i-1)*(2*n+1)+n+1+3*(j-1)+2 ...
              (i-1)*(2*n+1)+n+1+3*(j-1)+3 ...
              (i-1)*(2*n+1)+3*(j-1)+4 ...
              ];

          Panel{2*(4*(fix((n-1)/3))+3)*(i-1)+4*(j-1)+4} = [...
              (i-1)*(2*n+1)+3*(j-1)+4 ...
              (i-1)*(2*n+1)+n+1+3*(j-1)+3 ...
              (i-1)*(2*n+1)+n+1+3*(j-1)+4 ...
              ];


        end
        
        Panel{2*(4*(fix((n-1)/3))+3)*(i-1)+4*(fix((n-1)/3))+1} = [...
          (i-1)*(2*n+1)+3*(fix(n/3))-2 ...
          (i-1)*(2*n+1)+n+1+3*(fix(n/3))-2 ...
          (i-1)*(2*n+1)+n+1+3*(fix(n/3))-1 ...
          (i-1)*(2*n+1)+3*(fix(n/3))-1 ...
          ];

        Panel{2*(4*(fix((n-1)/3))+3)*(i-1)+4*(fix((n-1)/3))+2} = [...
          (i-1)*(2*n+1)+3*(fix(n/3))-1 ...
          (i-1)*(2*n+1)+n+1+3*(fix(n/3))-1 ...
          (i-1)*(2*n+1)+3*(fix(n/3)) ...
          ];

        Panel{2*(4*(fix((n-1)/3))+3)*(i-1)+4*(fix((n-1)/3))+3} = [...
          (i-1)*(2*n+1)+3*(fix(n/3)) ...
          (i-1)*(2*n+1)+n+1+3*(fix(n/3))-1 ...
          (i-1)*(2*n+1)+n+1+3*(fix(n/3)) ...
          (i-1)*(2*n+1)+3*(fix(n/3))+1 ...
          ];      

        
        for j =1:(fix((n-1)/3))
            Panel{2*(4*(fix((n-1)/3))+3)*(i-1)+4*(j-1)+1+(4*(fix((n-1)/3))+3)} = [...
              n+1+(i-1)*(2*n+1)+3*(j-1)+1 ...
              n+(i-1)*(2*n+1)+n+1+3*(j-1)+1 ...
              n+(i-1)*(2*n+1)+n+1+3*(j-1)+2 ...
              n+1+(i-1)*(2*n+1)+3*(j-1)+2 ...
              ];
            Panel{2*(4*(fix((n-1)/3))+3)*(i-1)+4*(j-1)+2+(4*(fix((n-1)/3))+3)} = [...
              n+1+(i-1)*(2*n+1)+3*(j-1)+2 ...
              n+(i-1)*(2*n+1)+n+1+3*(j-1)+2 ...
              n+(i-1)*(2*n+1)+n+1+3*(j-1)+3 ...
              ];
            Panel{2*(4*(fix((n-1)/3))+3)*(i-1)+4*(j-1)+3+(4*(fix((n-1)/3))+3)} = [...
              n+(i-1)*(2*n+1)+3*(j-1)+3 ...
              n+1+(i-1)*(2*n+1)+n+1+3*(j-1)+2 ...
              n+1+(i-1)*(2*n+1)+n+1+3*(j-1)+3 ...
              n+(i-1)*(2*n+1)+3*(j-1)+4 ...
              ];
            Panel{2*(4*(fix((n-1)/3))+3)*(i-1)+4*(j-1)+4+(4*(fix((n-1)/3))+3)} = [...
              n+(i-1)*(2*n+1)+3*(j-1)+4 ...
              n+(i-1)*(2*n+1)+n+1+3*(j-1)+4 ...
              n+(i-1)*(2*n+1)+3*(j-1)+5 ...
              ];

        end    
    
        Panel{2*(4*(fix((n-1)/3))+3)*(i-1)+4*(fix((n-1)/3))+1+(4*(fix((n-1)/3))+3)} = [...
          n+1+(i-1)*(2*n+1)+3*(fix(n/3))-2 ...
          n+(i-1)*(2*n+1)+n+1+3*(fix(n/3))-2 ...
          n+(i-1)*(2*n+1)+n+1+3*(fix(n/3))-1 ...
          n+1+(i-1)*(2*n+1)+3*(fix(n/3))-1 ...
          ];
        Panel{2*(4*(fix((n-1)/3))+3)*(i-1)+4*(fix((n-1)/3))+2+(4*(fix((n-1)/3))+3)} = [...
          n+1+(i-1)*(2*n+1)+3*(fix(n/3))-1 ...
          n+(i-1)*(2*n+1)+n+1+3*(fix(n/3))-1 ...
          n+(i-1)*(2*n+1)+n+1+3*(fix(n/3)) ...
          ];
        Panel{2*(4*(fix((n-1)/3))+3)*(i-1)+4*(fix((n-1)/3))+3+(4*(fix((n-1)/3))+3)} = [...
          n+(i-1)*(2*n+1)+3*(fix(n/3)) ...
          n+1+(i-1)*(2*n+1)+n+1+3*(fix(n/3))-1 ...
          n+1+(i-1)*(2*n+1)+n+1+3*(fix(n/3)) ...
          n+(i-1)*(2*n+1)+3*(fix(n/3))+1 ...
          ];   
      
end


